"use strict";
/*
 * @adonisjs/lucid
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.SqliteDialect = void 0;
class SqliteDialect {
    constructor(client) {
        this.client = client;
        this.name = 'sqlite3';
        this.supportsAdvisoryLocks = false;
        /**
         * The default format for datetime column. The date formats is
         * valid for luxon date parsing library
         */
        this.dateTimeFormat = 'yyyy-MM-dd HH:mm:ss';
    }
    /**
     * Returns an array of table names
     */
    async getAllTables() {
        const tables = await this.client
            .query()
            .from('sqlite_master')
            .select('name')
            .where('type', 'table')
            .whereNot('name', 'like', 'sqlite_%')
            .orderBy('name', 'asc');
        return tables.map(({ name }) => name);
    }
    /**
     * Truncate SQLITE tables
     */
    async truncate(table, _) {
        return this.client.knexQuery().table(table).truncate();
    }
    /**
     * Attempts to add advisory lock to the database and
     * returns it's status.
     */
    getAdvisoryLock() {
        throw new Error('Sqlite doesn\'t support advisory locks');
    }
    /**
     * Releases the advisory lock
     */
    releaseAdvisoryLock() {
        throw new Error('Sqlite doesn\'t support advisory locks');
    }
}
exports.SqliteDialect = SqliteDialect;
